name: hello-world 
on: push
jobs:
  my-job:
    runs-on: ubuntu-latest
    steps:
      - name: set-up-variables
        run: |
              COMMIT_MSGS="${{github.event.head_commit.message}}"
              NEW_CMT_MSGS="${COMMIT_MSGS//$'\n'/|}"
              echo "short_desc=Github commit by ${{ github.actor }} on ${{ github.event.head_commit.timestamp }} " >> $GITHUB_ENV
              echo "desc=Automated Software Deployment. \nGithub commit pushed to branch ${{ github.ref_name }} by ${{ github.actor }} on ${{ github.event.head_commit.timestamp }} \nCommit id: ${{ github.sha }} \n Commit message: $NEW_CMT_MSGS" >> $GITHUB_ENV
              short_desc="{$short_desc//$'\n'/'%0A'}" >> $GITHUB_ENV
              
      - name: character-replacement-test
        run: |
          REPO="${{github.actor}}]n\ntt"
          DB_NAME="${REPO//\\n/_}"
          echo db_name $DB_NAME
          COMMIT_MSGS="${{github.event.head_commit.message}}"
          echo msgs $COMMIT_MSGS
          FORM_CMT_MSGS="${COMMIT_MSGS//$'\n'/ }"
          echo "commit_msgs=${FORM_CMT_MSGS}" >> $GITHUB_ENV
      - name: my-step
        uses: ServiceNow/servicenow-devops-change@v1.34.2
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'my-job'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"${{ env.short_desc }}","description":"${{ env.desc }}","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'
